# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /hello:
    get:
      summary: This is just a test endpoint to get you started. Please delete this endpoint.
      operationId: hello
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Test return
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/HelloResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/register:
    post:
      summary: Register a user
      operationId: authRegister
      requestBody:
        description: A thing to insert. Returns the inserted thing with an ID
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        201:
          description: The inserted fullname with a unique ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '400':
          description: Bad Request - Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/login:
    post:
      summary: Login a user
      operationId: authLogin
      # security:
      #   - BearerAuth:
      #       - "login:w"
      requestBody:
        description: Login API
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        200:
          description: The get id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad Request - Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /profile/{id}:
    get:
      summary: get profiel
      operationId: getProfile
      security:
        - BearerAuth:
            - "profile:r"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        '400':
          description: Bad Request - Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    GeneralResponse:
      type: object
      properties:
        message:
          type: string
    RegisterResponse:
      allOf:
        - $ref: '#/components/schemas/GeneralResponse'
        - properties:
            data:
              type: object
              properties:
                id:
                  type: integer
    LoginResponse:
      allOf:
        - $ref: '#/components/schemas/GeneralResponse'
        - properties:
            data:
              type: object
              properties:
                id:
                  type: integer
                jwt:
                  type: string
    ProfileResponse:
      allOf:
        - $ref: '#/components/schemas/GeneralResponse'
        - properties:
            data:
              type: object
              properties:
                fullname:
                  type: string
                phone_number:
                  type: string
    Register:
      properties:
        fullname:
          type: string
        phone_number:
          type: string
        password:
          type: string
      required:
        - fullname
        - phone_number
        - password
    Login:
      properties:
        phone_number:
          type: string
        password:
          type: string
      required:
        - phone_number
        - password
    # ThingWithID:
    #   allOf:
    #     - $ref: '#/components/schemas/Thing'
    #     - properties:
    #         id:
    #           type: integer
    #           format: int64
    #       required:
    #         - id
    HelloResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
  securitySchemes:
        BearerAuth:
          type: http
          scheme: bearer
          bearerFormat: JWT
security:
  - BearerAuth: [ ]
